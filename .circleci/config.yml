version: 2.1
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment on failure
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file server-stack.yml \
              --stack-name server-stack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - destroy_environment

  create_inventory:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "[all]" > ~/inventory
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory

  update_inventory_with_ec2_ip:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: Update inventory file
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Project,Values=Gnosis" --output text >> ~/inventory

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["c2:a2:42:30:01:be:48:b6:cf:8c:f8:36:de:88:b0:ee"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ansible-playbook -i ~/inventory playbook.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: Smoke test
          command: |
            URL="https://blog.udacity2.com/"

            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

workflows:
  create-and-configure-instance:
    jobs:
      - create_inventory
      - create_infrastructure
      - update_inventory_with_ec2_ip:
          requires:
            - create_inventory
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - update_inventory_with_ec2_ip
      - smoke_test:
          requires:
            - configure_infrastructure
